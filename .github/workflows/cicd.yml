name: Flask CI/CD

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup python 10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev --system --deploy --ignore-pipfile
          
      - name: Validate against black
        run: python -m black --check src tests
      
      - name: Validate against pylint
        run: python -m pylint src tests

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --system --deploy --ignore-pipfile
        
      - name: Run tests
        run: |
          python manage.py cov
          
  build_and_push_docker_image:
    name: Build Push Docker image to registry
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker build -f ./Dockerfile -t ${{ env.REGISTRY }}/${{ github.repository }}:latest .
          docker push ${{ env.REGISTRY }}/${{ github.repository }}:latest
